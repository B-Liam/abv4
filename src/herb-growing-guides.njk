---
permalink: "herb-growing-guides/index.html"
date: Last Modified
title: Herb Growing Guides | Allotment Book
description: See all the herb growing guides in the Allotment Book. Each guide includes an introduction to growing, varieties, sowing, and harvest time. 
layout: /layouts/pagetemplate.njk
---
        
        <div id="sidebar">
            
        </div>
    
        <div id="main-column">
        
                <main id="main-content">
                    
                        <div id="content-heading">
                            <div id="breadcrumb-container">
                                <div id="breadcrumb">
                                <a href="/contents">Contents</a><i class="fas fa-chevron-right"></i>
                                <a href="/herb-growing-guides">Herb Guides</a><i class="fas fa-chevron-right"></i>
                                </div>
                            </div>
                        </div>
                        

                        <div id="content-body">

                            <h1 style="font-size:1.4rem">Herb Growing Guides</h1>

                            <div style="min-width: 360px; margin-left:auto; margin-right:auto;padding-bottom: 2rem; display: flex; flex-wrap:wrap"class="herb-container"></div>

                                <template id="herb-template">

                                <a id="divlink" href""><div style="width:150px;border: solid #009900 2px; margin-bottom: 1rem; margin-left: 0.8rem;margin-right:0.8rem">

                                    <img style="display:block; width:150px;" src="" alt="" />
                                    
                                    <div style="display:flex; align-items: center"> 
                                        <div style="padding-left: 0.5em; padding-top: 7px;padding-bottom:7px"><i style="font-size:0.9em;color:#009900;" class="fas fa-chevron-circle-right"></i></div><div style="padding-left:0.5em;padding-right: 10px;font-size:0.95rem" id="herb-link"></div>
                                    </div>                                   

                                </div></a>
                                
                                </template>
                        
                        </div> 
                </main>
            </div>

<script>

// a link that wraps the template making the whole div clickable
function linkDiv(slug) {
    return `/contents/${slug}`
}

//the code that makes the breadcrumb
function makeLink(title,slug) {
 return (
     `<a href="/contents/${slug}">${title}</a>`
 )
};

//now obselete, was used to create a link within the template
function makeButton(title,slug) {
 return (
     `<i style="font-size:0.7em;color:#009900;padding-right:1%" class="fas fa-chevron-circle-right"></i> <a href="/contents/${slug}">${title}</a>`
 )
};

//different variables used for arrays to store the links to the different sections
let introPagesArray = JSON.parse(`{{ pagesstoryblok.page | getContentPages("introduction") | dump | safe }}`);
let startPagesArray = JSON.parse(`{{ pagesstoryblok.page | getContentPages("starter") | dump | safe }}`);
let vegPagesArray = JSON.parse(`{{ vegstoryblok.page | getContentPages("vegetable") | dump | safe }}`);
let fruitPagesArray = JSON.parse(`{{ vegstoryblok.page | getContentPages("fruit") | dump | safe }}`);
let herbPagesArray = JSON.parse(`{{ vegstoryblok.page | getContentPages("herb") | dump | safe }}`);
let recipeArray = {{ recipestoryindex | dump | safe }};
let allPagesSorted = [];
let introPages = [];
let starterPages = [];
let vegPages = [];
let fruitPages= [];
let herbPages= [];

console.log(allPagesSorted);

//this function sorts all pages ready for the next and previous buttons, and stores this in the allPagesSorted array 
function sortPages() {
    let interimArray = [...introPagesArray,...startPagesArray,...vegPagesArray,...fruitPagesArray,...herbPagesArray,...recipeArray];
    allPagesSorted = interimArray.sort (function (a,b) {
     return a.order - b.order
})
}
sortPages();

//all the content is stored in allPagesSorted, it is then pushed into the respective sections using the category property
function postIntoSections() {
    for ( i = 0 ; i < allPagesSorted.length ; i++ ) {
        if ( allPagesSorted[i].category == "introduction" ) {
            introPages.push(allPagesSorted[i]);
        } else if ( allPagesSorted[i].category == "starter" ) {
            starterPages.push(allPagesSorted[i]);
        } else if ( allPagesSorted[i].category == "vegetable" ) {
            vegPages.push(allPagesSorted[i]);
        } else if ( allPagesSorted[i].category == "fruit" ) {
            fruitPages.push(allPagesSorted[i]);
        } else if ( allPagesSorted[i].category == "herb" ) {
            herbPages.push(allPagesSorted[i]);
        } else if ( allPagesSorted[i].category == "recipe" ) {
            herbPages.push(allPagesSorted[i]);
        }

    }
}
postIntoSections();

//this ultimately calls the makeLink function to create the links, the purpose of this function is to select the right template to post the content to
function initialise(pages, containerid, templateid, divid) {
 let sortedArray = pages.sort (function (a,b) {
     return a.order - b.order;
 })

 const container = document.querySelector(containerid);
 const template = document.querySelector(templateid);

 sortedArray.forEach((article) => {
     const element = template.content.cloneNode(true);
     const image = element.querySelector('img');
     image.src = article.image;
     image.alt = article.slug;
     element.getElementById(divid).innerHTML = article.title;
     element.getElementById('divlink').href = linkDiv(article.slug);
     container.appendChild(element);
 });
}

initialise(herbPages, ".herb-container",'#herb-template',"herb-link");

</script>
