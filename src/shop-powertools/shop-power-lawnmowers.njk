---
layout: /layouts/pagetemplate.njk
date: Last Modified
pagination:
    data: varpowertoolscats.lawnmowers.cats
    size: 1
    alias: vegtypes
permalink: "shop/lawnmowers/{{ vegtypes.vegtype | slug }}/index.html"
eleventyComputed:
    title: "{{ vegtypes.vegtype | title }} Lawnmowers | Shop | Allotment Book"
    description: "See {{ vegtypes.vegtype }} cordless lawnmowers. Cordless lawnmowers can cut grass in areas without mains electricity and avoid the need to store petrol."
---

        {% set vegetableplural = varpowertoolscats.lawnmowers.nameplural %}
        {% set vegetablesingular = varpowertoolscats.lawnmowers.namesingular %}
        {% set filtercat = varpowertoolscats.lawnmowers.cats %}

        <div id="sidebar">

        </div>

        <div id="main-column">
        
                <main id="main-content">
                    
                    <div id="content-heading">
                        <div id="breadcrumb-container">
                            <div id="breadcrumb">
                                <a href="/shop">Shop</a> <i class="fas fa-chevron-right"></i> 
                                <a href="/shop/{{ vegetableplural | slug }}/all">{{ vegetableplural | title }}</a> <i class="fas fa-chevron-right"></i>
                            </div>
                        </div>
                    </div>
        
            <div id="content-body">
                        <h1 style="margin-bottom:10px">Cordless {{ vegetableplural | title }}: {{ vegtypes.vegtype | title }}</h1>
                        <div style="margin-top:0px;margin-bottom:20px" id="filters">
                            <div id="filter-title">
                            View:
                            </div>
                            <div id="filter-links">
                            {% for veg in filtercat %}
                                <a href="/shop/{{ vegetableplural | slug }}/{{ veg.vegtype | slug }}"><button style="background:#e0f7d3;color:#009900; border:none">{{ veg.vegtype | upper }}</button></a>
                            {% endfor %}
                            
                            </div>
                        </div>

                        <div style="padding-bottom: 2rem" class="all-container"></div>

                        <template id="all-template">

                        <div id="prod-container" style="border-style:solid;border-width:1;border-color:#e5e5e5;display:flex;margin-bottom:20px">

                            <div style="padding:0.5em;width:40%" id="image-container">
                            <img style="width:100%" src="" alt="" />
                            </div>    

                            <div style="width:60%; padding-left:1em;padding-right:0.5em" id="text-container">
                            <h3 id="item-title" style="margin-top:0.5em;margin-bottom:10px"></h3>
                            <div id="item-description" style="margin-bottom:20px"></div>
                            <div style="margin-top:3px"><strong>Brand:</strong><span id="item-brand"></span></div>
                            <a id="button-link" rel="sponsored" href=""><button style="background:#009900;color:#ffffff; border:none;padding:5px 10px 5px 10px;margin-top:20px;margin-bottom:20px;font-size:1rem"><i class="fas fa-chevron-circle-right"></i> Â£<span id="button-price"></span> on <span id="button-merchant"></span></button></a>
                            
                            </div>

                        </div>

                        </template>
            

                        



                    </div>

                </main>
        
            </div>




<script>

//filter powderData so that the array only contains the relevant data for each page
let powerData = JSON.parse(`{{ powertooldata | getPowerTool(vegetablesingular, vegtypes.vegtype) | dump | safe }}`);
//sorts the products by price, lowest to highest
powerData.sort((a, b) => (a.price > b.price) ? 1 : - 1);

console.log(powerData);

// populates the template with data

//this ultimately calls the makeLink function to create the links, the purpose of this function is to select the right template to post the content to
function initialise(pages, containerid, templateid) {
 let sortedArray = pages.sort (function (a,b) {
     return a.order - b.order;
 })

 const container = document.querySelector(containerid);
 const template = document.querySelector(templateid);

 pages.forEach((item) => {
     const element = template.content.cloneNode(true);
     const image = element.querySelector('img');
     image.src = item.image;
     image.alt = item.name;
     const button = element.querySelector('a');
     button.href = item.deeplink;
     element.getElementById('item-title').innerHTML = item.name;
     element.getElementById('item-description').innerHTML = item.description;
     element.getElementById('item-brand').innerHTML = item.brand;
     element.getElementById('button-price').innerHTML = item.price;
     element.getElementById('button-merchant').innerHTML = item.merchant;
     container.appendChild(element);
 });
}

initialise(powerData, ".all-container",'#all-template');

</script>
        

