---
layout: /layouts/pagetemplate.njk
date: Last Modified
pagination:
    data: monthsharvesting.months
    size: 1
    alias: pagedata
    addAllPagesToCollections: true
permalink: "{{ pagedata.month | slug }}-harvesting-guide/index.html"
eleventyComputed:
    title: "{{ pagedata.month | title }} Harvesting Guide | Allotment Book"
    description: "A guide on what homegrown fruit, vegetables, and herbs are available in {{ pagedata.month | title }}, whether freshly picked, left standing on the plot, or from storage."
---
       
        <div id="sidebar">
         
        </div>
    
        <div id="main-column">
        
                <main id="main-content">
                    
                    <div id="content-heading">
                        <div id="breadcrumb-container">
                            <div id="breadcrumb">
                                <a href="/planning-tools">Planning</a><i class="fas fa-chevron-right"></i>
                                <a href="/{{ pagedata.month | lower }}-harvesting-guide">{{ pagedata.month | title }} Harvesting</a><i class="fas fa-chevron-right"></i>
                            </div>
                        </div>
                    </div>

                    <div id="content-body">

                    <div id="higher-next-previous" style="display:flex;justify-content:space-between;align-items:center;height:40px">
                            <div id="higher-previous">
                            </div>
                            <div id="higher-next">
                            </div>
                        </div>

                        <h1 style="font-size:1.4rem" id="title">{{ pagedata.month | title }} Harvesting Guide</h1> 
                        <div style="margin-bottom:2rem">
                            <ul>
                            {% for item in pagedata.notes %}
                                <li>{{item}}</li>
                            {% endfor %}
                            </ul>
                        </div>

                        <div style="background:#e0f7d3;border: solid 2px #009900;padding: 0 1.3rem 0 1.3rem; border-radius: 25px;margin-bottom:2rem">

                        <h2 style="margin-bottom:0px;font-size:1.5rem">Freshly Picked</h2>

                            <div id="outdoor-container" style="display:flex; flex-wrap: wrap;margin-bottom:2rem">

                                        <div style="width:270px">

                                            <h4 style="margin-top:15px; margin-bottom:10px">Vegetables</h4>

                                            <div style="" id="outdoor-vegetables">None ready</div>

                                            <div style=""class="outdoorveg-container"></div>

                                                <template id="outdoorveg-template">
                                                
                                                <div style="padding-bottom:1%; display:flex">
                                                    <div><i style="font-size:0.7em;color:#009900" class="fas fa-chevron-circle-right"></i></div><div style="padding-left:0.5em;text-transform: capitalize;" id="outdoorveg-link"></div>
                                                </div>

                                                </template> 

                                        </div>

                                        <div style="width:270px">

                                            <h4 style="margin-top:15px; margin-bottom:10px">Fruit</h4>

                                            <div style="" id="outdoor-fruit">None ready</div>

                                            <div style=""class="outdoorfruit-container"></div>

                                                <template id="outdoorfruit-template">
                                                
                                                <div style="padding-bottom:1%; display:flex">
                                                    <div><i style="font-size:0.7em;color:#009900" class="fas fa-chevron-circle-right"></i></div><div style="padding-left:0.5em;text-transform: capitalize;" id="outdoorfruit-link"></div>
                                                </div>

                                                </template> 

                                        </div>

                                    <div style="width:270px">

                                        <h4 style="margin-top:15px; margin-bottom:10px">Herbs</h4>

                                        <div style="" id="outdoor-herbs">None ready</div>

                                        <div style=""class="outdoorherb-container"></div>

                                            <template id="outdoorherb-template">
                                            
                                            <div style="padding-bottom:1%; display:flex">
                                                <div><i style="font-size:0.7em;color:#009900" class="fas fa-chevron-circle-right"></i></div><div style="padding-left:0.5em;text-transform: capitalize;" id="outdoorherb-link"></div>
                                            </div>

                                            </template>

                                    </div>

                                </div>

                        </div>

                        <div style="background:#e0f7d3;border: solid 2px #009900;padding: 0 1.3rem 0 1.3rem; border-radius: 25px;margin-bottom:2rem">

                        <h2 style="margin-bottom:10px;font-size:1.5rem">From Storage</h2>

                            <div id="indoor-container" style="display:flex; flex-wrap: wrap;margin-bottom:2rem">

                                        <div style="width:270px">

                                            <h4 style="margin-top:15px; margin-bottom:10px">Vegetables</h4>

                                            <div style="" id="indoor-vegetables">None suggested</div>

                                            <div style=""class="indoorveg-container"></div>

                                                <template id="indoorveg-template">
                                                
                                                <div style="padding-bottom:1%; display:flex">
                                                    <div><i style="font-size:0.7em;color:#009900" class="fas fa-chevron-circle-right"></i></div><div style="padding-left:0.5em;text-transform: capitalize;" id="indoorveg-link"></div>
                                                </div>

                                                </template> 

                                        </div>

                                        <div style="width:270px">

                                            <h4 style="margin-top:15px; margin-bottom:10px">Fruit</h4>

                                            <div style="" id="indoor-fruit">None suggested</div>

                                            <div style=""class="indoorfruit-container"></div>

                                                <template id="indoorfruit-template">
                                                
                                                <div style="padding-bottom:1%; display:flex">
                                                    <div><i style="font-size:0.7em;color:#009900" class="fas fa-chevron-circle-right"></i></div><div style="padding-left:0.5em;text-transform: capitalize;" id="indoorfruit-link"></div>
                                                </div>

                                                </template> 

                                        </div>

                                    <div style="width:270px">

                                        <h4 style="margin-top:15px; margin-bottom:10px">Herbs</h4>

                                        <div style="" id="indoor-herbs">None suggested</div>

                                        <div style=""class="indoorherb-container"></div>

                                            <template id="indoorherb-template">
                                            
                                            <div style="padding-bottom:1%; display:flex">
                                                <div><i style="font-size:0.7em;color:#009900" class="fas fa-chevron-circle-right"></i></div><div style="padding-left:0.5em;text-transform: capitalize;" id="indoorherb-link"></div>
                                            </div>

                                            </template>

                                    </div>

                                </div>
                    </div>

                    <div id="next-previous" style="display:flex;justify-content:space-between;align-items:center; margin-bottom: 2rem;height:40px">
                            <div id="lower-previous">
                            </div>
                            <div id="lower-next">
                            </div>
                        </div>

                    </div> 
                
                </main>
            </div>

<script>

//this gets the relevant month and stores it in a variable
let month = `{{pagedata.month}}`;

//new variables to hold the clean data
//I have created a custom filter in .eleventy.js called getPlants, this contains a function that filters the data 
let freshMonthData = JSON.parse(`{{ factsharvest | getPlants(pagedata.month) | dump | safe }}`);
let storedMonthData = JSON.parse(`{{ factsstore | getPlants(pagedata.month) | dump | safe }}`);

//function to sort the fresh and stored variables in alphabetical order
freshMonthData.sort ((a, b) => (a.plant > b.plant) ? 1 : -1);
storedMonthData.sort ((a, b) => (a.plant > b.plant) ? 1 : -1);


//check for empty data, and show 'none suggested' on the page if empty
function checkEmpty(data, cat, divname) {
    //this creates a new array containing a filter like 'plant indoor vegetables' or 'plant indoor herbs'
    let checkLength = data.filter(function(item){
return item.category == cat;
});
     if ( checkLength.length > 0 ) {
     document.querySelector(divname).style = "display:none";
 } else {
     document.querySelector(divname).style = "color:#009900";
 }
}
checkEmpty(freshMonthData, "vegetable", "#outdoor-vegetables");
checkEmpty(freshMonthData, "fruit", "#outdoor-fruit");
checkEmpty(freshMonthData, "herb", "#outdoor-herbs");
checkEmpty(storedMonthData, "vegetable", "#indoor-vegetables");
checkEmpty(storedMonthData, "fruit", "#indoor-fruit");
checkEmpty(storedMonthData, "herb", "#indoor-herbs");

console.log(storedMonthData);


//to populate the growing data
//the code that makes the link for freshly picked
function makeLink(title,slug,freshorstored, monthvalue) {
let slugify = convertToSlug(slug);
if(freshorstored == "fresh" ) {
 return (
     `<a href="/contents/${slugify}">${title}</a>`
 )
}
if(freshorstored == "stored" ) {
 return (
     `<a href="/contents/${slugify}">${title} <span style="text-transform:lowercase">(${monthvalue})</span></a>`
 )
}
};


//this ultimately calls the makeLink function to create the links, the purpose of this function is to select the right template to post the content to
function initialise(pages, containerid, templateid, divid, type, freshorstored) {

 const container = document.querySelector(containerid);
 const template = document.querySelector(templateid);

 pages.forEach((plant) => {
     if ( plant.category == type ) {
     const element = template.content.cloneNode(true);
     element.getElementById(divid).innerHTML = makeLink(plant.plant, plant.plant, freshorstored, plant.month);
     container.appendChild(element);
     }
 });
}

initialise(freshMonthData, ".outdoorveg-container",'#outdoorveg-template',"outdoorveg-link", "vegetable", "fresh");
initialise(freshMonthData, ".outdoorherb-container",'#outdoorherb-template',"outdoorherb-link", "herb", "fresh");
initialise(freshMonthData, ".outdoorfruit-container",'#outdoorfruit-template',"outdoorfruit-link", "fruit", "fresh");
initialise(storedMonthData, ".indoorveg-container",'#indoorveg-template',"indoorveg-link", "vegetable", "stored");
initialise(storedMonthData, ".indoorherb-container",'#indoorherb-template',"indoorherb-link", "herb", "stored");
initialise(storedMonthData, ".indoorfruit-container",'#indoorfruit-template',"indoorfruit-link", "fruit", "stored");



//generating the previous and next buttons
//grabbing the page title
let grabTitle = document.getElementById("title").innerHTML;
//an array of pages
let allPlanting = [
    "january harvesting guide",
    "february harvesting guide",
    "march harvesting guide",
    "april harvesting guide",
    "may harvesting guide",
    "june harvesting guide",
    "july harvesting guide",
    "august harvesting guide",
    "september harvesting guide",
    "october harvesting guide",
    "november harvesting guide",
    "december harvesting guide"
    ]

//this determines the index value of the current page in the allPlanting array
let pageIndexNumber = null;

function findPageIndex() {
    for ( i = 0 ; i < allPlanting.length ; i++) {
        if ( grabTitle.toLowerCase() == allPlanting[i] ) {
            pageIndexNumber = i;
        }
    }
}
findPageIndex();

//this stores the next and prevous pages in variables
let nextPage = [];
let previousPage = [];

function findNext() {
    if ( pageIndexNumber < allPlanting.length - 1) {
    nextPage.push(allPlanting[pageIndexNumber + 1])
    }
}
findNext();

function findPrevious() {
    if ( pageIndexNumber !== 0 ) {
    previousPage.push(allPlanting[pageIndexNumber - 1])
    }
}
findPrevious();

//a function to convert the next and previous values as a slug to use in a url
function convertToSlug(text)
{
    return text
        .toLowerCase()
        .replace(/ /g,'-')
        .replace(/[^\w-]+/g,'')
        ;
}

//this generates the button to the next page
function makeNextButton(slug) {
 return (
     `<a href="/${slug}"><button style="background:#009900;width:140px; border:none;color:#ffffff;font-size:1rem; padding-top: 0.5rem; padding-bottom: 0.5rem;margin-top:10px">Next Month</button></a>`
 )
};

//this generates the button to the previous page
function makePreviousButton(slug) {
 return (
     `<a href="/${slug}"><button style="background:#009900;width:140px; border:none;color:#ffffff;margin-t;font-size:1rem; padding-top: 0.5rem; padding-bottom: 0.5rem;margin-top:10px">Previous</button></a>`
 )
};

//this calls the buttons based on logic

function createButtons() {
    if ( nextPage.length > 0 ) {
        document.getElementById("lower-next").innerHTML = makeNextButton(convertToSlug(nextPage[0]));
        document.getElementById("higher-next").innerHTML = makeNextButton(convertToSlug(nextPage[0]));
        }
    if ( pageIndexNumber > 0 ) {
        document.getElementById("lower-previous").innerHTML = makePreviousButton(convertToSlug(previousPage[0]));
        document.getElementById("higher-previous").innerHTML = makePreviousButton(convertToSlug(previousPage[0]));
    }
}
createButtons();

</script>







